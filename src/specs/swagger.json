{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"IUserBaseModel": {
				"properties": {
					"id": {},
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"role": {
						"type": "string"
					},
					"isEmailVerified": {
						"type": "boolean"
					}
				},
				"required": [
					"name",
					"email",
					"password",
					"role",
					"isEmailVerified"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IApiErrorDetail": {
				"properties": {
					"message": {
						"type": "string"
					},
					"field": {
						"type": "string"
					},
					"value": {}
				},
				"required": [
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IApiError": {
				"properties": {
					"code": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"type": "string"
					},
					"details": {
						"items": {
							"$ref": "#/components/schemas/IApiErrorDetail"
						},
						"type": "array"
					},
					"stack": {
						"type": "string"
					}
				},
				"required": [
					"code",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TokenPayload": {
				"properties": {
					"token": {
						"type": "string"
					},
					"expires": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"token",
					"expires"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AccessAndRefreshTokens": {
				"properties": {
					"access": {
						"$ref": "#/components/schemas/TokenPayload"
					},
					"refresh": {
						"$ref": "#/components/schemas/TokenPayload"
					}
				},
				"required": [
					"access",
					"refresh"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IUserWithTokens": {
				"properties": {
					"user": {
						"$ref": "#/components/schemas/IUserBaseModel"
					},
					"tokens": {
						"$ref": "#/components/schemas/AccessAndRefreshTokens"
					}
				},
				"required": [
					"user",
					"tokens"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_IUserBaseModel.Exclude_keyofIUserBaseModel.id-or-role-or-isEmailVerified__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"email",
					"password"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"NewRegisteredUser": {
				"properties": {
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "@kazize/create-ts-starter-1",
		"version": "1.0.1",
		"description": "TypeScript Express.js backend boilerplate on AWS Lambda",
		"license": {
			"name": "MIT"
		},
		"contact": {
			"name": "Kazi Ehsan Aziz ",
			"email": "kazizehsan@gmail.com"
		}
	},
	"paths": {
		"/v1/users/me": {
			"get": {
				"operationId": "GetMe",
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IUserBaseModel"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IApiError"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/v1/users/{userId}": {
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IUserBaseModel"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IApiError"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IApiError"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v1/auth/register": {
			"post": {
				"operationId": "Register",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IUserWithTokens"
								}
							}
						}
					},
					"400": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IApiError"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					},
					"422": {
						"description": "Unprocessable Entity",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IApiError"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/NewRegisteredUser"
							}
						}
					}
				}
			}
		},
		"/v1/auth/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IUserWithTokens"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"password": {
										"type": "string"
									},
									"email": {
										"type": "string"
									}
								},
								"required": [
									"password",
									"email"
								],
								"type": "object"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}